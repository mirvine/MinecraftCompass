package compass;

import java.util.logging.Logger;
import org.bukkit.command.Command;
import org.bukkit.command.CommandSender;
import org.bukkit.command.CommandException;
import org.bukkit.entity.Player;
import org.bukkit.plugin.Plugin;
import org.bukkit.plugin.java.JavaPlugin;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerMoveEvent;
import org.bukkit.scheduler.BukkitRunnable;
import java.io.IOException;
import java.util.concurrent.TimeoutException;
import java.lang.Exception;
import java.lang.Error;
import java.io.*; 
import java.net.*; 



public class Compass extends JavaPlugin implements Listener{
  public static Logger log = Logger.getLogger("Minecraft");
  public DataOutputStream outToServer;

  public void onEnable() {
    log.info("[Compass] Start up.");
    String sentence;   
    String modifiedSentence;   
    BufferedReader inFromUser = new BufferedReader( new InputStreamReader(System.in));  
    log.info("[Compass] trying connect0"); 
    try{
      Socket clientSocket = new Socket("localhost", 6789);  
      log.info("[Compass] getOutputStream()");
      outToServer = new DataOutputStream(clientSocket.getOutputStream());   
      if (outToServer == null) {
          log.info("outToServer is null in onEnable");
      }
      log.info("[Compass] getInputStream()");
      BufferedReader inFromServer = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));
    }
    catch (Exception e){
      log.info("[Compass] Send failed: Exception: ");
      e.printStackTrace();
    }

    getServer().getPluginManager().registerEvents(this, this);
  }
  public void onReload() {
    log.info("[Compass] Server reloaded.");
  }
  public void onDisable() {
    log.info("[Compass] Server stopping.");
  }

  @EventHandler
  public void onMove(PlayerMoveEvent event) {
      try{
        if (outToServer == null) {
          log.info("outToServer is null");
        }
        log.info("[CompassTask] writing to outToServer");
        outToServer.writeBytes("test"+"\n");
        log.info(" [x] Sent '" + "test" + "'");
      }
      catch (Exception e){
        log.info("[CompassTask] Send failed: exception:");
        e.printStackTrace();
      }
      catch (Error e){
        log.info("[CompassTask] Send failed: error:");
        e.printStackTrace();
      }
  }

}
